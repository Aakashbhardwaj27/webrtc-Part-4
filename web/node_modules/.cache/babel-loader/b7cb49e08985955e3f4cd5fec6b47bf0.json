{"ast":null,"code":"import _classCallCheck from\"/Users/amireshaq/DATA/Tutorials/Youtube/webrtc-Part-4/web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/amireshaq/DATA/Tutorials/Youtube/webrtc-Part-4/web/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/amireshaq/DATA/Tutorials/Youtube/webrtc-Part-4/web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/amireshaq/DATA/Tutorials/Youtube/webrtc-Part-4/web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/amireshaq/DATA/Tutorials/Youtube/webrtc-Part-4/web/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import io from'socket.io-client';var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);function App(props){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this,props));// https://reactjs.org/docs/refs-and-the-dom.html\n_this.componentDidMount=function(){_this.socket=io.connect('https://8aa7a006.ngrok.io/webrtcPeer',{path:'/io/webrtc',query:{}});_this.socket.on('connection-success',function(success){console.log(success);});_this.socket.on('offerOrAnswer',function(sdp){_this.textref.value=JSON.stringify(sdp);// set sdp as remote description\n_this.pc.setRemoteDescription(new RTCSessionDescription(sdp));});_this.socket.on('candidate',function(candidate){// console.log('From Peer... ', JSON.stringify(candidate))\n// this.candidates = [...this.candidates, candidate]\n_this.pc.addIceCandidate(new RTCIceCandidate(candidate));});// const pc_config = null\nvar pc_config={\"iceServers\":[// {\n//   urls: 'stun:[STUN_IP]:[PORT]',\n//   'credentials': '[YOR CREDENTIALS]',\n//   'username': '[USERNAME]'\n// },\n{urls:'stun:stun.l.google.com:19302'}]};// https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection\n// create an instance of RTCPeerConnection\n_this.pc=new RTCPeerConnection(pc_config);// triggered when a new candidate is returned\n_this.pc.onicecandidate=function(e){// send the candidates to the remote peer\n// see addCandidate below to be triggered on the remote peer\nif(e.candidate){// console.log(JSON.stringify(e.candidate))\n_this.sendToPeer('candidate',e.candidate);}};// triggered when there is a change in connection state\n_this.pc.oniceconnectionstatechange=function(e){console.log(e);};// triggered when a stream is added to pc, see below - this.pc.addStream(stream)\n// this.pc.onaddstream = (e) => {\n//   this.remoteVideoref.current.srcObject = e.stream\n// }\n_this.pc.ontrack=function(e){debugger;_this.remoteVideoref.current.srcObject=e.streams[0];};// called when getUserMedia() successfully returns - see below\n// getUserMedia() returns a MediaStream object (https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)\nvar success=function success(stream){window.localStream=stream;_this.localVideoref.current.srcObject=stream;_this.pc.addStream(stream);};// called when getUserMedia() fails - see below\nvar failure=function failure(e){console.log('getUserMedia Error: ',e);};// https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n// see the above link for more constraint options\nvar constraints={// audio: true,\nvideo:true,// video: {\n//   width: 1280,\n//   height: 720\n// },\n// video: {\n//   width: { min: 1280 },\n// }\noptions:{mirror:true}};// https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\nnavigator.mediaDevices.getUserMedia(constraints).then(success).catch(failure);};_this.sendToPeer=function(messageType,payload){_this.socket.emit(messageType,{socketID:_this.socket.id,payload:payload});};_this.createOffer=function(){console.log('Offer');// https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createOffer\n// initiates the creation of SDP\n_this.pc.createOffer({offerToReceiveVideo:1}).then(function(sdp){// console.log(JSON.stringify(sdp))\n// set offer sdp as local description\n_this.pc.setLocalDescription(sdp);_this.sendToPeer('offerOrAnswer',sdp);});};_this.createAnswer=function(){console.log('Answer');_this.pc.createAnswer({offerToReceiveVideo:1}).then(function(sdp){// console.log(JSON.stringify(sdp))\n// set answer sdp as local description\n_this.pc.setLocalDescription(sdp);_this.sendToPeer('offerOrAnswer',sdp);});};_this.setRemoteDescription=function(){// retrieve and parse the SDP copied from the remote peer\nvar desc=JSON.parse(_this.textref.value);// set sdp as remote description\n_this.pc.setRemoteDescription(new RTCSessionDescription(desc));};_this.addCandidate=function(){// retrieve and parse the Candidate copied from the remote peer\n// const candidate = JSON.parse(this.textref.value)\n// console.log('Adding candidate:', candidate)\n// add the candidate to the peer connection\n// this.pc.addIceCandidate(new RTCIceCandidate(candidate))\n_this.candidates.forEach(function(candidate){console.log(JSON.stringify(candidate));_this.pc.addIceCandidate(new RTCIceCandidate(candidate));});};_this.localVideoref=React.createRef();_this.remoteVideoref=React.createRef();_this.socket=null;_this.candidates=[];return _this;}_createClass(App,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",null,React.createElement(\"video\",{style:{width:240,height:240,margin:5,backgroundColor:'black'},ref:this.localVideoref,autoPlay:true,muted:true}),React.createElement(\"video\",{style:{width:240,height:240,margin:5,backgroundColor:'black'},ref:this.remoteVideoref,autoPlay:true}),React.createElement(\"br\",null),React.createElement(\"button\",{onClick:this.createOffer},\"Offer\"),React.createElement(\"button\",{onClick:this.createAnswer},\"Answer\"),React.createElement(\"br\",null),React.createElement(\"textarea\",{style:{width:450,height:40},ref:function ref(_ref){_this2.textref=_ref;}}));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/amireshaq/DATA/Tutorials/Youtube/webrtc-Part-4/web/src/App.js"],"names":["React","Component","io","App","props","componentDidMount","socket","connect","path","query","on","success","console","log","sdp","textref","value","JSON","stringify","pc","setRemoteDescription","RTCSessionDescription","candidate","addIceCandidate","RTCIceCandidate","pc_config","urls","RTCPeerConnection","onicecandidate","e","sendToPeer","oniceconnectionstatechange","ontrack","remoteVideoref","current","srcObject","streams","stream","window","localStream","localVideoref","addStream","failure","constraints","video","options","mirror","navigator","mediaDevices","getUserMedia","then","catch","messageType","payload","emit","socketID","id","createOffer","offerToReceiveVideo","setLocalDescription","createAnswer","desc","parse","addCandidate","candidates","forEach","createRef","width","height","margin","backgroundColor","ref"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport io from 'socket.io-client'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    // https://reactjs.org/docs/refs-and-the-dom.html\n    this.localVideoref = React.createRef()\n    this.remoteVideoref = React.createRef()\n\n    this.socket = null\n    this.candidates = []\n  }\n\n  componentDidMount = () => {\n\n    this.socket = io.connect(\n      'https://8aa7a006.ngrok.io/webrtcPeer',\n      {\n        path: '/io/webrtc',\n        query: {}\n      }\n    )\n\n    this.socket.on('connection-success', success => {\n      console.log(success)\n    })\n\n    this.socket.on('offerOrAnswer', (sdp) => {\n\n      this.textref.value = JSON.stringify(sdp)\n\n      // set sdp as remote description\n      this.pc.setRemoteDescription(new RTCSessionDescription(sdp))\n    })\n\n    this.socket.on('candidate', (candidate) => {\n      // console.log('From Peer... ', JSON.stringify(candidate))\n      // this.candidates = [...this.candidates, candidate]\n      this.pc.addIceCandidate(new RTCIceCandidate(candidate))\n    })\n\n    // const pc_config = null\n\n    const pc_config = {\n      \"iceServers\": [\n        // {\n        //   urls: 'stun:[STUN_IP]:[PORT]',\n        //   'credentials': '[YOR CREDENTIALS]',\n        //   'username': '[USERNAME]'\n        // },\n        {\n          urls : 'stun:stun.l.google.com:19302'\n        }\n      ]\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection\n    // create an instance of RTCPeerConnection\n    this.pc = new RTCPeerConnection(pc_config)\n\n    // triggered when a new candidate is returned\n    this.pc.onicecandidate = (e) => {\n      // send the candidates to the remote peer\n      // see addCandidate below to be triggered on the remote peer\n      if (e.candidate) {\n        // console.log(JSON.stringify(e.candidate))\n        this.sendToPeer('candidate', e.candidate)\n      }\n    }\n\n    // triggered when there is a change in connection state\n    this.pc.oniceconnectionstatechange = (e) => {\n      console.log(e)\n    }\n\n    // triggered when a stream is added to pc, see below - this.pc.addStream(stream)\n    // this.pc.onaddstream = (e) => {\n    //   this.remoteVideoref.current.srcObject = e.stream\n    // }\n\n    this.pc.ontrack = (e) => {\n      debugger\n      this.remoteVideoref.current.srcObject = e.streams[0]\n    }\n\n    // called when getUserMedia() successfully returns - see below\n    // getUserMedia() returns a MediaStream object (https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)\n    const success = (stream) => {\n      window.localStream = stream\n      this.localVideoref.current.srcObject = stream\n      this.pc.addStream(stream)\n    }\n\n    // called when getUserMedia() fails - see below\n    const failure = (e) => {\n      console.log('getUserMedia Error: ', e)\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n    // see the above link for more constraint options\n    const constraints = {\n      // audio: true,\n      video: true,\n      // video: {\n      //   width: 1280,\n      //   height: 720\n      // },\n      // video: {\n      //   width: { min: 1280 },\n      // }\n      options: {\n        mirror: true,\n      }\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n    navigator.mediaDevices.getUserMedia(constraints)\n      .then(success)\n      .catch(failure)\n  }\n\n  sendToPeer = (messageType, payload) => {\n    this.socket.emit(messageType, {\n      socketID: this.socket.id,\n      payload\n    })\n  }\n\n  /* ACTION METHODS FROM THE BUTTONS ON SCREEN */\n\n  createOffer = () => {\n    console.log('Offer')\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createOffer\n    // initiates the creation of SDP\n    this.pc.createOffer({ offerToReceiveVideo: 1 })\n      .then(sdp => {\n        // console.log(JSON.stringify(sdp))\n\n        // set offer sdp as local description\n        this.pc.setLocalDescription(sdp)\n\n        this.sendToPeer('offerOrAnswer', sdp)\n    })\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createAnswer\n  // creates an SDP answer to an offer received from remote peer\n  createAnswer = () => {\n    console.log('Answer')\n    this.pc.createAnswer({ offerToReceiveVideo: 1 })\n      .then(sdp => {\n        // console.log(JSON.stringify(sdp))\n\n        // set answer sdp as local description\n        this.pc.setLocalDescription(sdp)\n\n        this.sendToPeer('offerOrAnswer', sdp)\n    })\n  }\n\n  setRemoteDescription = () => {\n    // retrieve and parse the SDP copied from the remote peer\n    const desc = JSON.parse(this.textref.value)\n\n    // set sdp as remote description\n    this.pc.setRemoteDescription(new RTCSessionDescription(desc))\n  }\n\n  addCandidate = () => {\n    // retrieve and parse the Candidate copied from the remote peer\n    // const candidate = JSON.parse(this.textref.value)\n    // console.log('Adding candidate:', candidate)\n\n    // add the candidate to the peer connection\n    // this.pc.addIceCandidate(new RTCIceCandidate(candidate))\n\n    this.candidates.forEach(candidate => {\n      console.log(JSON.stringify(candidate))\n      this.pc.addIceCandidate(new RTCIceCandidate(candidate))\n    });\n  }\n\n  render() {\n\n    return (\n      <div>\n        <video\n          style={{\n            width: 240,\n            height: 240,\n            margin: 5,\n            backgroundColor: 'black'\n          }}\n          ref={ this.localVideoref }\n          autoPlay muted>\n        </video>\n        <video\n          style={{\n            width: 240,\n            height: 240,\n            margin: 5,\n            backgroundColor: 'black'\n          }}\n          ref={ this.remoteVideoref }\n          autoPlay>\n        </video>\n        <br />\n\n        <button onClick={this.createOffer}>Offer</button>\n        <button onClick={this.createAnswer}>Answer</button>\n\n        <br />\n        <textarea style={{ width: 450, height:40 }} ref={ref => { this.textref = ref }} />\n\n        {/* <br />\n        <button onClick={this.setRemoteDescription}>Set Remote Desc</button>\n        <button onClick={this.addCandidate}>Add Candidate</button> */}\n      </div>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}